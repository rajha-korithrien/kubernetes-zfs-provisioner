apiVersion: v1
kind: Service
metadata:
  name: example
  namespace: zfs-system
  labels:
    app: example
spec:
  ports:
  - name: foo # Actually, no port is needed.
    port: 1234
  clusterIP: None
  selector:
    app: example
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stateful-example
  namespace: paas-zookeeper
spec:
  serviceName: "example"
  selector:
    matchLabels:
      app: stateful-example
  replicas: 3
  template:
    metadata:
      labels:
        app: stateful-example
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - stateful-example
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: stateful-example
        image: busybox
        command:
          - "/bin/sh"
        args:
          - "-c"
          - "sleep 10; if [ -e /mnt/SUCCESS ]; then echo 'file already exists'; ls -la /mnt; exit 0; else echo 'file does not exist attempting to create it'; id && touch /mnt/SUCCESS && exit 0 || exit 1; fi"
        volumeMounts:
        - name: zfs-volume
          mountPath: "/mnt"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: zfs-volume
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1M
      storageClassName: zfs-mirror
